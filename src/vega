#!/bin/bash
#
# vega - a simpler and faster cli system information tool
# Copyright (C) 2023 Frank Tao
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.

# Color variables
red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
blue='\033[0;34m'
magenta='\033[0;35m'
cyan='\033[0;36m'

accent=$blue
bold='\033[1m'
soft='\033[2m'
reset='\033[0m'


# Checks for config file

DIR="$(dirname "$(readlink -f "$0")")"

if [[ -e ~/.config/vega/config.sh ]]; then
    source "~/.config/vega/config.sh"
else 
    source "$DIR/config.sh"
fi


# Formatting Functions

title() {
    titlelen=$(echo $(whoami)@$(cat /etc/hostname) | wc -c)
    printf "${accent}${bold}$(whoami)${reset}@${accent}${bold}$(cat /etc/hostname)${reset}\n"
    printf "${soft}%${titlelen}s${reset}\n" |tr " " "="
}

subtitl() {
    printf "${bold}< $@ >${reset}\n"
}

firstentry() {
    printf "${accent}${bold}╔ $@ = ${reset}"
}

entry() {
    printf "${accent}${bold}╠ $@ = ${reset}"
}

lastentry() {
    printf "${accent}${bold}╚ $@ = ${reset}"
}

# Data-getting functions
# Hardware

model() {
    printf "$@$(cat /sys/devices/virtual/dmi/id/product_name)${reset}\n"
}

cpu() {
    corecount=$(($(cat /proc/cpuinfo | grep 'processor' | awk -F ': ' '{print $2}' | tail -1)+1))
    printf "$@$(cat /proc/cpuinfo | grep -m1 'model name' | awk -F ': ' '{print $2}') ($corecount)${reset}\n"
}

gpu() {
    printf "$@$($DIR/vegautils --gpu 2>/dev/null)${reset}\n"
}

mem() {
    printf "$@$($DIR/vegautils --ram 2>/dev/null)${reset}\n"
}

hdd() {
    printf "$@$($DIR/vegautils --disk 2>/dev/null)${reset}\n"
}

res() {
    res=$(head -n1 -q /sys/class/drm/*/modes 2>/dev/null)
    printf "$@$([ -z "$res" ] && echo "None" || echo $res)${reset}\n"
}

# Software

os() {
    printf "$@$(cat /etc/os-release | grep PRETTY_NAME | awk -F '"' '{print $2}')${reset}\n"
}

kernel() {
    printf "$@$($DIR/vegautils --kernel 2>/dev/null)${reset}\n"
}

packages() {
    has() { type -p "$1" >/dev/null && manager=$1; }
    show() { printf "$($@ | wc -l) (${1/-*})"; }

    printf "$@"

    has kiss       && show kiss l
    has cpt-list   && show cpt-list
    has pacman-key && show pacman -Qq --color never
    has dpkg       && show dpkg-query -f '.\n' -W
    has xbps-query && show xbps-query -l
    has apk        && show apk info
    has opkg       && show opkg list-installed
    has pacman-g2  && show pacman-g2 -Q
    has lvu        && show lvu installed
    has tce-status && show tce-status -i
    has pkg_info   && show pkg_info
    has pkgin      && show pkgin list
    has tazpkg     && show tazpkg list
    has sorcery    && show gaze installed
    has alps       && show alps showinstalled
    has butch      && show butch list
    has swupd      && show swupd bundle-list --quiet
    has pisi       && show pisi li
    has pacstall   && show pacstall -L

    printf "${reset}\n"
}

wm() {
    if wmpid="$(fuser "${XDG_RUNTIME_DIR}/${WAYLAND_DISPLAY:-wayland-0}" 2>&1 | awk -F ' ' '{print $2}')" ||
        wmpid="$(lsof -t "${XDG_RUNTIME_DIR}/${WAYLAND_DISPLAY:-wayland-0}" 2>&1)"
    then
        printf "$@$(cat /proc/${wmpid}/comm)${reset}\n"
    else
        printf "$@X11/None${reset}\n"
    fi
}

terminal() {
    termpid=$(cat /proc/$$/stat | awk -F ' ' '{print $4}')
    termpid=$(cat /proc/$termpid/stat | awk -F ' ' '{print $4}')
    printf "$@$(cat /proc/$termpid/comm)${reset}\n"
}

shell() {
    termpid=$(cat /proc/$$/stat | awk -F ' ' '{print $4}')
    printf "$@$(cat /proc/$termpid/comm)${reset}\n"
}

ip_local() {
    printf "$@$($DIR/vegautils --ip 2>/dev/null)${reset}\n"
}


# Read flags

case $1 in
    "--help")
        cat $(dirname "$0")/text/help
        exit
        ;;
    "--version")
        cat $(dirname "$0")/text/version
        exit
        ;;
    "--model")
        model
        exit
        ;;
    "--cpu")
        cpu
        exit
        ;;
    "--gpu")
        gpu
        exit
        ;;
    "--ram")
        ram
        exit
        ;;
    "--disk")
        disk
        exit
        ;;
    "--res")
        res
        exit
        ;;
    "--os")
        os
        exit
        ;;
    "--pkg")
        packages
        exit
        ;;
    "--wm")
        wm
        exit
        ;;
    "--term")
        term
        exit
        ;;
    "--shell")
        shell
        exit
        ;;
    "--ip")
        ip
        exit
        ;;
    "--version")
        cat $(dirname "$0")/text/version
        exit
        ;;
    *)
esac


# Run fetch

fetch
